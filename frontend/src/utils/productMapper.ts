import { Product } from '../api';
import { ProductCardData, ProductPageData } from '../types/product';

// –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API
const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const getFullImageUrl = (imagePath: string | null): string => {
  if (!imagePath) return '';
  
  // –ï—Å–ª–∏ —É–∂–µ –ø–æ–ª–Ω—ã–π URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (imagePath.startsWith('http')) {
    return imagePath;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL –∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–º—É –ø—É—Ç–∏
  return `${API_BASE_URL}${imagePath}`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Product –≤ ProductCardData
export const mapProductToCard = (product: any): ProductCardData => {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–∑–æ–Ω –¥–ª—è —à–∏–Ω
  let season: 'summer' | 'winter' | 'all_season' | undefined;
  if (product.season) {
    season = product.season;
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è —à–∏–Ω
  let size = '';
  if (product.width && product.profile && product.diameter) {
    size = `${product.width}/${product.profile} R${product.diameter}`;
  }
  // –î–ª—è –¥–∏—Å–∫–æ–≤
  else if (product.diameter && product.width) {
    size = `${product.diameter}x${product.width}`;
    if (product.offset) {
      size += ` ET${product.offset}`;
    }
  }

  // –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–∏–¥–∫—É
  const discount = product.old_price && product.final_price 
    ? Math.round(((parseFloat(product.old_price) - product.final_price) / parseFloat(product.old_price)) * 100)
    : undefined;

  return {
    id: product.id,
    slug: product.slug,
    name: product.name,
    brand: product.brand?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–µ–Ω–¥',
    image: getFullImageUrl(product.main_image?.image) || getPlaceholderImage(product),
    price: product.final_price || parseFloat(product.price) || 0,
    oldPrice: product.old_price ? parseFloat(product.old_price) : undefined,
    discount,
    rating: parseFloat(product.rating) || 0,
    reviewsCount: product.reviews_count || 0,
    inStock: product.is_in_stock !== undefined ? product.is_in_stock : (product.stock_quantity > 0),
    isNew: product.is_new || false,
    isBestseller: product.is_bestseller || false,
    season,
    size,
    article: product.sku,
    euLabel: product.fuel_efficiency ? {
      fuelEfficiency: product.fuel_efficiency,
      wetGrip: product.wet_grip,
      noiseLevel: product.noise_level
    } : undefined,
  };
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Product –≤ ProductPageData
export const mapProductToPage = (product: Product): ProductPageData => {
  const cardData = mapProductToCard(product);

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
  const specifications = [];
  
  if (product.tire_details) {
    const tire = product.tire_details;
    specifications.push(
      { label: '–®–∏—Ä–∏–Ω–∞', value: `${tire.width} –º–º` },
      { label: '–ü—Ä–æ—Ñ–∏–ª—å', value: `${tire.profile}%` },
      { label: '–î–∏–∞–º–µ—Ç—Ä', value: `R${tire.diameter}` },
      { label: '–ò–Ω–¥–µ–∫—Å –Ω–∞–≥—Ä—É–∑–∫–∏', value: tire.load_index },
      { label: '–ò–Ω–¥–µ–∫—Å —Å–∫–æ—Ä–æ—Å—Ç–∏', value: tire.speed_index },
      { label: '–°–µ–∑–æ–Ω', value: product.season === 'summer' ? '–õ–µ—Ç–Ω–∏–µ' : product.season === 'winter' ? '–ó–∏–º–Ω–∏–µ' : '–í—Å–µ—Å–µ–∑–æ–Ω–Ω—ã–µ' },
      { label: '–¢–∏–ø –ø—Ä–æ—Ç–µ–∫—Ç–æ—Ä–∞', value: tire.tread_pattern },
      { label: '–®–∏–ø—ã', value: tire.studded ? '–î–∞' : '–ù–µ—Ç' },
      { label: 'Run Flat', value: tire.run_flat ? '–î–∞' : '–ù–µ—Ç' },
    );
  }

  if (product.wheel_details) {
    const wheel = product.wheel_details;
    specifications.push(
      { label: '–®–∏—Ä–∏–Ω–∞', value: `${wheel.width}"` },
      { label: '–î–∏–∞–º–µ—Ç—Ä', value: `${wheel.diameter}"` },
      { label: '–í—ã–ª–µ—Ç (ET)', value: `${wheel.offset} –º–º` },
      { label: '–†–∞–∑–±–æ–ª—Ç–æ–≤–∫–∞', value: wheel.bolt_pattern },
      { label: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ', value: `${wheel.center_bore} –º–º` },
      { label: '–ú–∞—Ç–µ—Ä–∏–∞–ª', value: wheel.material },
      { label: '–¶–≤–µ—Ç', value: wheel.color },
    );
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
  const features = [];
  
  if (product.tire_details) {
    if (product.tire_details.studded) {
      features.push({ icon: '‚ùÑÔ∏è', label: '–®–∏–ø–æ–≤–∞–Ω–Ω—ã–µ', description: '–û—Ç–ª–∏—á–Ω–æ–µ —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –Ω–∞ –ª—å–¥—É' });
    }
    if (product.tire_details.run_flat) {
      features.push({ icon: 'üõ°Ô∏è', label: 'Run Flat', description: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è —Å –ø—Ä–æ–∫–æ–ª–æ–º' });
    }
    if (product.season === 'all_season') {
      features.push({ icon: 'üå§Ô∏è', label: '–í—Å–µ—Å–µ–∑–æ–Ω–Ω—ã–µ', description: '–ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –ª—é–±–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ–¥–∞' });
    }
  }

  if (product.wheel_details) {
    if (product.wheel_details.material === 'alloy') {
      features.push({ icon: '‚ö°', label: '–õ–µ–≥–∫–æ—Å–ø–ª–∞–≤–Ω—ã–µ', description: '–õ–µ–≥–∫–∏–π –≤–µ—Å –∏ –ø—Ä–æ—á–Ω–æ—Å—Ç—å' });
    }
    features.push({ icon: '‚ú®', label: '–°—Ç–∏–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω', description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥' });
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const images = [];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  if (product.images && product.images.length > 0) {
    images.push(...product.images.map((img: any) => getFullImageUrl(img.image)));
  }
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ
  if (images.length === 0 && product.main_image?.image) {
    images.push(getFullImageUrl(product.main_image.image));
  }
  
  // –ï—Å–ª–∏ —Å–æ–≤—Å–µ–º –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º placeholder
  if (images.length === 0) {
    images.push(getPlaceholderImage(product));
  }

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ
  const deliveryInfo = {
    cities: [
      { name: '–ú–∞—Ö–∞—á–∫–∞–ª–∞', price: 0, days: '1-2 –¥–Ω—è' },
      { name: '–ö–∞—Å–ø–∏–π—Å–∫', price: 300, days: '1-2 –¥–Ω—è' },
      { name: '–î–µ—Ä–±–µ–Ω—Ç', price: 500, days: '2-3 –¥–Ω—è' },
      { name: '–•–∞—Å–∞–≤—é—Ä—Ç', price: 600, days: '2-3 –¥–Ω—è' },
      { name: '–ë—É–π–Ω–∞–∫—Å–∫', price: 400, days: '1-2 –¥–Ω—è' },
    ],
    note: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 10 000 —Ä—É–±.'
  };

  return {
    ...cardData,
    description: product.description || '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —à–∏–Ω—ã –∏ –¥–∏—Å–∫–∏ –æ—Ç –≤–µ–¥—É—â–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π. –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏.',
    shortDescription: product.short_description || '',
    specifications,
    images,
    category: product.category.name,
    productType: product.product_type,
    brandCountry: product.brand.country || undefined,
    deliveryInfo,
    features,
    euLabel: product.euLabel ? {
      fuelEfficiency: product.euLabel.fuelEfficiency,
      wetGrip: product.euLabel.wetGrip,
      noiseLevel: product.euLabel.noiseLevel
    } : undefined,
  };
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞—Ä—Ç–æ—á–∫–∏
export const mapProductsToCards = (products: Product[]): ProductCardData[] => {
  return products.map(mapProductToCard);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–æ–≤–∞—Ä–∞
export const getPlaceholderImage = (product: any): string => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–µ–π —à–∏–Ω
  if (product.width && product.profile && product.diameter) {
    return '/placeholder-tire.svg';
  }
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–µ–π –¥–∏—Å–∫–æ–≤
  else if (product.bolt_pattern || product.wheel_type) {
    return '/placeholder-wheel.svg';
  }
  return '/placeholder-product.svg';
}; 